---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import { formatDate } from "../helpers/date";
import Tag from "./Tag.vue";

const allProjects = await getCollection("projects");

interface Props {
    class?: string;
    limit?: number;
}

const { limit, ...attrs } = Astro.props;
---

<div class:list={["projects grid gap-4", attrs.class]}>
    {
        allProjects
            .sort((a, b) => {
                return (
                    new Date(b.data.createdAt).getTime() -
                    new Date(a.data.createdAt).getTime()
                );
            })
            .slice(0, limit ?? allProjects.length)
            .map((project) => (
                <a href={`/projects/${project.slug}`}>
                    <div class="default-card flex flex-col rounded-2xl group cursor-pointer">
                        <Image
                            src={project.data.cover}
                            alt={project.data.title}
                            class="project-image group-hover:-translate-y-2 rounded-t-xl"
                            style={{ aspectRatio: "1.78" }}
                            loading="eager"
                        />
                        <div class="p-4">
                            <h1 class="font-bold group-hover:text-purple-500 transition">
                                {project.data.title}
                            </h1>
                            <span class="text-xs">
                                {formatDate(project.data.createdAt)}
                            </span>
                            <div class="flex gap-1 mt-1">
                                {project.data.tags.map((tag) => (
                                    <Tag>{tag}</Tag>
                                ))}
                            </div>
                        </div>
                    </div>
                </a>
            ))
    }
</div>

<style>
    .projects {
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    }

    .project-image {
        transition: cubic-bezier(0.175, 0.885, 0.32, 1.275) 0.5s;
    }
</style>
